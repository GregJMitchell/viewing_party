---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=API_Key&language=en-US&query=Harry%20
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 04 Dec 2020 00:25:46 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 04584e6ce49107398b8d5c8c917c8930.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAH50-C4
      X-Amz-Cf-Id:
      - 87KU1Gv0VejReUYzjrfuIobem9g6ySHoV-mO3L1AzlUlS9pKUup9dw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 04 Dec 2020 00:25:46 GMT
recorded_with: VCR 6.0.0
